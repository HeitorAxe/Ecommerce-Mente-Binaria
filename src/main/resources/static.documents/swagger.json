{
  "openapi": "3.0.1",
  "info": {
    "title": "REST API - Ecommerce Mente Binária",
    "description": "E-commerce API for product and order management!",
    "contact": {
      "name": "Mente Binária",
      "email": "mentebibaria.pb@compasso.com.br"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "version 1"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Contains all operations to register, edit, delete, view a product."
    },
    {
      "name": "Orders",
      "description": "Contains all operations to register, edit, delete, view an order."
    }
  ],
  "paths": {
    "/products/{id}": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Retrieve a product by id",
        "description": "No authentication required",
        "operationId": "getById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource retrieved successfully",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "update product by id",
        "description": "No authentication required",
        "operationId": "updateProductId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Resource successfully updated",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Resource not processed due to invalid data",
            "content": {
              " application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete a product by ID",
        "description": "No authentication required",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully"
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Retrieve a order by id",
        "description": "This operation allows clients to retrieve details of an order based on its unique identifier. No authentication is required for this operation ",
        "operationId": "getById_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval of the order",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - The request is poorly formatted or contains invalid parameters",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Orders"
        ],
        "summary": "Update order",
        "description": "Customers can update the order",
        "operationId": "updateOrderId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderUpdateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Resource retrieved successfully",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - malformed request syntax",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Orders"
        ],
        "summary": "Cancel order with cancel reason",
        "description": "Clients can cancel the order",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDeleteDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Resource retrieved successfully",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              }
            }
          },
          "400": {
            "description": "Poorly formatted resource or no reason message",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "List all registered products",
        "description": "No authentication required",
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "List all registered products",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductResponseDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create a new product",
        "description": "Feature to create a new user",
        "operationId": "createProduct",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponseDTO"
                }
              }
            }
          },
          "409": {
            "description": "product already registered in the system",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "422": {
            "description": "Resource not processed due to invalid input data",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/orders": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "List all registered products",
        "description": "No authentication required",
        "operationId": "getAll_1",
        "responses": {
          "200": {
            "description": "List all registered products",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponseDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Orders"
        ],
        "summary": "Create order",
        "description": "This operation allows clients to create an order. No authentication is required for this operation ",
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderCreateDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful creation of order",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/OrderResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The request contains invalid parameters",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The request is poorly formatted",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorMessage"
                }
              }
            }
          }
        }
      }
    },
    "/products/page": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get all products as pageable",
        "description": "Retrieve products as pageable",
        "operationId": "getAllAsPage",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products retrieved successfully as pageable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PageableDTO"
                }
              }
            }
          }
        }
      }
    },
    "/orders/page": {
      "get": {
        "tags": [
          "Orders"
        ],
        "summary": "Get all products as pageable",
        "description": "Retrieve products as pageable",
        "operationId": "getAllAsPage_1",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of products retrieved successfully as pageable",
            "content": {
              "application/json;charset=UTF-8": {
                "schema": {
                  "$ref": "#/components/schemas/PageableDTO"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProductResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "statusText": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "ProductUpdateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 2147483647,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 100,
            "minLength": 10,
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "AddressDTO": {
        "required": [
          "complement",
          "number",
          "postalCode"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "complement": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "state": {
            "type": "string"
          }
        }
      },
      "OrderHasProductDTO": {
        "required": [
          "productId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OrderUpdateDTO": {
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderHasProductDTO"
            }
          },
          "address": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "paymentMethod": {
            "pattern": "CREDIT_CARD|BANK_TRANSFER|CRYPTOCURRENCY|GIFT_CARD|PIX|OTHER",
            "type": "string"
          },
          "orderStatus": {
            "pattern": "CONFIRMED|SENT|CANCELED",
            "type": "string"
          }
        }
      },
      "ProductCreateDTO": {
        "required": [
          "description",
          "name",
          "price"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "maxLength": 100,
            "minLength": 10,
            "type": "string"
          },
          "price": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "OrderResponseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderHasProductDTO"
            }
          },
          "address": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "paymentMethod": {
            "type": "string"
          },
          "orderStatus": {
            "type": "string"
          },
          "totalValue": {
            "type": "number",
            "format": "double"
          },
          "subTotalValue": {
            "type": "number",
            "format": "double"
          },
          "creationDate": {
            "type": "string",
            "format": "date-time"
          },
          "cancelationDate": {
            "type": "string",
            "format": "date-time"
          },
          "cancelReason": {
            "type": "string"
          }
        }
      },
      "OrderCreateDTO": {
        "required": [
          "paymentMethod"
        ],
        "type": "object",
        "properties": {
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderHasProductDTO"
            }
          },
          "address": {
            "$ref": "#/components/schemas/AddressDTO"
          },
          "paymentMethod": {
            "pattern": "CREDIT_CARD|BANK_TRANSFER|CRYPTOCURRENCY|GIFT_CARD|PIX|OTHER",
            "type": "string"
          }
        }
      },
      "PageableDTO": {
        "type": "object",
        "properties": {
          "content": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalElements": {
            "type": "integer",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageElements": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OrderDeleteDTO": {
        "required": [
          "cancelReason"
        ],
        "type": "object",
        "properties": {
          "cancelReason": {
            "type": "string"
          }
        }
      }
    }
  }
}